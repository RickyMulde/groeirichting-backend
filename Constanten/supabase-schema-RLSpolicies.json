[
  {
    "tablename": "employers",
    "policyname": "Allow employer creation during registration",
    "cmd": "INSERT",
    "qual": null,
    "with_check": "true"
  },
  {
    "tablename": "employers",
    "policyname": "Employers can update own company",
    "cmd": "UPDATE",
    "qual": "(auth.uid() IN ( SELECT users.id\n   FROM users\n  WHERE (users.employer_id = employers.id)))",
    "with_check": null
  },
  {
    "tablename": "employers",
    "policyname": "Employers can view own company",
    "cmd": "SELECT",
    "qual": "(auth.uid() IN ( SELECT users.id\n   FROM users\n  WHERE (users.employer_id = employers.id)))",
    "with_check": null
  },
  {
    "tablename": "gesprek",
    "policyname": "Employees can insert own conversations",
    "cmd": "INSERT",
    "qual": null,
    "with_check": "(auth.uid() = werknemer_id)"
  },
  {
    "tablename": "gesprek",
    "policyname": "Employees can update own conversations",
    "cmd": "UPDATE",
    "qual": "(auth.uid() = werknemer_id)",
    "with_check": null
  },
  {
    "tablename": "gesprek",
    "policyname": "Employees can view own conversations",
    "cmd": "SELECT",
    "qual": "(auth.uid() = werknemer_id)",
    "with_check": null
  },
  {
    "tablename": "gesprek",
    "policyname": "Employers can view team conversations",
    "cmd": "SELECT",
    "qual": "(auth.uid() IN ( SELECT users.id\n   FROM users\n  WHERE ((users.role = 'employer'::text) AND (users.employer_id = ( SELECT teams.werkgever_id\n           FROM teams\n          WHERE (teams.id = gesprek.team_id))))))",
    "with_check": null
  },
  {
    "tablename": "gesprek",
    "policyname": "Service role kan alles",
    "cmd": "ALL",
    "qual": "(auth.role() = 'service_role'::text)",
    "with_check": null
  },
  {
    "tablename": "gesprek",
    "policyname": "Users kunnen eigen gesprekken zien",
    "cmd": "SELECT",
    "qual": "(werknemer_id = auth.uid())",
    "with_check": null
  },
  {
    "tablename": "gesprekken_compleet",
    "policyname": "Employees can insert own complete conversations",
    "cmd": "INSERT",
    "qual": null,
    "with_check": "(auth.uid() = werknemer_id)"
  },
  {
    "tablename": "gesprekken_compleet",
    "policyname": "Employees can update own complete conversations",
    "cmd": "UPDATE",
    "qual": "(auth.uid() = werknemer_id)",
    "with_check": null
  },
  {
    "tablename": "gesprekken_compleet",
    "policyname": "Employees can view own complete conversations",
    "cmd": "SELECT",
    "qual": "(auth.uid() = werknemer_id)",
    "with_check": null
  },
  {
    "tablename": "gesprekken_compleet",
    "policyname": "Employers can view employee complete conversations",
    "cmd": "SELECT",
    "qual": "(auth.uid() IN ( SELECT users.id\n   FROM users\n  WHERE ((users.role = 'employer'::text) AND (users.employer_id = ( SELECT users_1.employer_id\n           FROM users users_1\n          WHERE (users_1.id = gesprekken_compleet.werknemer_id))))))",
    "with_check": null
  },
  {
    "tablename": "gesprekken_compleet",
    "policyname": "Service role kan alles",
    "cmd": "ALL",
    "qual": "(auth.role() = 'service_role'::text)",
    "with_check": null
  },
  {
    "tablename": "gesprekken_compleet",
    "policyname": "Users kunnen eigen complete gesprekken zien",
    "cmd": "SELECT",
    "qual": "(werknemer_id = auth.uid())",
    "with_check": null
  },
  {
    "tablename": "gesprekresultaten",
    "policyname": "Employees can insert own results",
    "cmd": "INSERT",
    "qual": null,
    "with_check": "(auth.uid() = werknemer_id)"
  },
  {
    "tablename": "gesprekresultaten",
    "policyname": "Employees can update own results",
    "cmd": "UPDATE",
    "qual": "(auth.uid() = werknemer_id)",
    "with_check": null
  },
  {
    "tablename": "gesprekresultaten",
    "policyname": "Employees can view own results",
    "cmd": "SELECT",
    "qual": "(auth.uid() = werknemer_id)",
    "with_check": null
  },
  {
    "tablename": "gesprekresultaten",
    "policyname": "Employers can view team results",
    "cmd": "SELECT",
    "qual": "(auth.uid() IN ( SELECT users.id\n   FROM users\n  WHERE ((users.role = 'employer'::text) AND (users.employer_id = ( SELECT teams.werkgever_id\n           FROM teams\n          WHERE (teams.id = gesprekresultaten.team_id))))))",
    "with_check": null
  },
  {
    "tablename": "gesprekresultaten",
    "policyname": "Service role kan alles",
    "cmd": "ALL",
    "qual": "(auth.role() = 'service_role'::text)",
    "with_check": null
  },
  {
    "tablename": "gesprekresultaten",
    "policyname": "Users kunnen eigen gesprekresultaten zien",
    "cmd": "SELECT",
    "qual": "((werknemer_id = auth.uid()) OR (werkgever_id = auth.uid()))",
    "with_check": null
  },
  {
    "tablename": "invitations",
    "policyname": "Anonymous users can read invitations by token",
    "cmd": "SELECT",
    "qual": "((token IS NOT NULL) AND (status = 'pending'::text))",
    "with_check": null
  },
  {
    "tablename": "invitations",
    "policyname": "Employers can insert own invitations",
    "cmd": "INSERT",
    "qual": null,
    "with_check": "(auth.uid() IN ( SELECT users.id\n   FROM users\n  WHERE ((users.role = 'employer'::text) AND (users.employer_id = invitations.employer_id))))"
  },
  {
    "tablename": "invitations",
    "policyname": "Employers can insert team invitations",
    "cmd": "INSERT",
    "qual": null,
    "with_check": "((auth.uid() IN ( SELECT users.id\n   FROM users\n  WHERE ((users.role = 'employer'::text) AND (users.employer_id = invitations.employer_id)))) AND (team_id IS NOT NULL))"
  },
  {
    "tablename": "invitations",
    "policyname": "Employers can update own invitations",
    "cmd": "UPDATE",
    "qual": "(auth.uid() IN ( SELECT users.id\n   FROM users\n  WHERE ((users.role = 'employer'::text) AND (users.employer_id = invitations.employer_id))))",
    "with_check": null
  },
  {
    "tablename": "invitations",
    "policyname": "Employers can view own invitations",
    "cmd": "SELECT",
    "qual": "(auth.uid() IN ( SELECT users.id\n   FROM users\n  WHERE ((users.role = 'employer'::text) AND (users.employer_id = invitations.employer_id))))",
    "with_check": null
  },
  {
    "tablename": "organization_theme_insights",
    "policyname": "Employers can insert own organization insights",
    "cmd": "INSERT",
    "qual": null,
    "with_check": "(auth.uid() IN ( SELECT users.id\n   FROM users\n  WHERE ((users.role = 'employer'::text) AND (users.employer_id = ( SELECT users_1.employer_id\n           FROM users users_1\n          WHERE (users_1.id = organization_theme_insights.organisatie_id))))))"
  },
  {
    "tablename": "organization_theme_insights",
    "policyname": "Employers can update own organization insights",
    "cmd": "UPDATE",
    "qual": "(auth.uid() IN ( SELECT users.id\n   FROM users\n  WHERE ((users.role = 'employer'::text) AND (users.employer_id = ( SELECT users_1.employer_id\n           FROM users users_1\n          WHERE (users_1.id = organization_theme_insights.organisatie_id))))))",
    "with_check": null
  },
  {
    "tablename": "organization_theme_insights",
    "policyname": "Employers can view own organization insights",
    "cmd": "SELECT",
    "qual": "(auth.uid() IN ( SELECT users.id\n   FROM users\n  WHERE ((users.role = 'employer'::text) AND (users.employer_id = ( SELECT users_1.employer_id\n           FROM users users_1\n          WHERE (users_1.id = organization_theme_insights.organisatie_id))))))",
    "with_check": null
  },
  {
    "tablename": "organization_theme_insights",
    "policyname": "Service role kan alles",
    "cmd": "ALL",
    "qual": "(auth.role() = 'service_role'::text)",
    "with_check": null
  },
  {
    "tablename": "organization_theme_insights",
    "policyname": "Users kunnen eigen insights zien",
    "cmd": "SELECT",
    "qual": "(organisatie_id = auth.uid())",
    "with_check": null
  },
  {
    "tablename": "teams",
    "policyname": "Employers can delete own teams",
    "cmd": "DELETE",
    "qual": "(auth.uid() IN ( SELECT users.id\n   FROM users\n  WHERE ((users.role = 'employer'::text) AND (users.employer_id = teams.werkgever_id))))",
    "with_check": null
  },
  {
    "tablename": "teams",
    "policyname": "Employers can insert own teams",
    "cmd": "INSERT",
    "qual": null,
    "with_check": "(auth.uid() IN ( SELECT users.id\n   FROM users\n  WHERE ((users.role = 'employer'::text) AND (users.employer_id = teams.werkgever_id))))"
  },
  {
    "tablename": "teams",
    "policyname": "Employers can update own teams",
    "cmd": "UPDATE",
    "qual": "(auth.uid() IN ( SELECT users.id\n   FROM users\n  WHERE ((users.role = 'employer'::text) AND (users.employer_id = teams.werkgever_id))))",
    "with_check": null
  },
  {
    "tablename": "teams",
    "policyname": "Service role kan alles",
    "cmd": "ALL",
    "qual": "(auth.role() = 'service_role'::text)",
    "with_check": null
  },
  {
    "tablename": "teams",
    "policyname": "Users kunnen eigen teams zien",
    "cmd": "SELECT",
    "qual": "(werkgever_id IN ( SELECT users.employer_id\n   FROM users\n  WHERE ((users.id = auth.uid()) AND (users.role = 'employer'::text))))",
    "with_check": null
  },
  {
    "tablename": "thema_evaluaties",
    "policyname": "Employers can view team evaluations",
    "cmd": "SELECT",
    "qual": "(auth.uid() IN ( SELECT users.id\n   FROM users\n  WHERE ((users.role = 'employer'::text) AND (users.employer_id = ( SELECT teams.werkgever_id\n           FROM teams\n          WHERE (teams.id = thema_evaluaties.team_id))))))",
    "with_check": null
  },
  {
    "tablename": "thema_evaluaties",
    "policyname": "Service role kan alle evaluaties zien",
    "cmd": "ALL",
    "qual": "(auth.role() = 'service_role'::text)",
    "with_check": null
  },
  {
    "tablename": "thema_evaluaties",
    "policyname": "Werknemers kunnen eigen evaluaties aanmaken",
    "cmd": "INSERT",
    "qual": null,
    "with_check": "(auth.uid() = werknemer_id)"
  },
  {
    "tablename": "thema_evaluaties",
    "policyname": "Werknemers kunnen eigen evaluaties niet verwijderen",
    "cmd": "DELETE",
    "qual": "false",
    "with_check": null
  },
  {
    "tablename": "thema_evaluaties",
    "policyname": "Werknemers kunnen eigen evaluaties niet wijzigen",
    "cmd": "UPDATE",
    "qual": "false",
    "with_check": null
  },
  {
    "tablename": "thema_evaluaties",
    "policyname": "Werknemers kunnen eigen evaluaties zien",
    "cmd": "SELECT",
    "qual": "(auth.uid() = werknemer_id)",
    "with_check": null
  },
  {
    "tablename": "theme_questions",
    "policyname": "Anyone can view theme questions",
    "cmd": "SELECT",
    "qual": "true",
    "with_check": null
  },
  {
    "tablename": "theme_questions",
    "policyname": "Only superusers can modify theme questions",
    "cmd": "ALL",
    "qual": "(auth.uid() IN ( SELECT users.id\n   FROM users\n  WHERE (users.role = 'superuser'::text)))",
    "with_check": null
  },
  {
    "tablename": "themes",
    "policyname": "Anyone can view themes",
    "cmd": "SELECT",
    "qual": "true",
    "with_check": null
  },
  {
    "tablename": "themes",
    "policyname": "Only superusers can modify themes",
    "cmd": "ALL",
    "qual": "(auth.uid() IN ( SELECT users.id\n   FROM users\n  WHERE (users.role = 'superuser'::text)))",
    "with_check": null
  },
  {
    "tablename": "top_vervolgacties",
    "policyname": "Employees can insert own top actions",
    "cmd": "INSERT",
    "qual": null,
    "with_check": "(auth.uid() = werknemer_id)"
  },
  {
    "tablename": "top_vervolgacties",
    "policyname": "Employees can update own top actions",
    "cmd": "UPDATE",
    "qual": "(auth.uid() = werknemer_id)",
    "with_check": null
  },
  {
    "tablename": "top_vervolgacties",
    "policyname": "Employees can view own top actions",
    "cmd": "SELECT",
    "qual": "(auth.uid() = werknemer_id)",
    "with_check": null
  },
  {
    "tablename": "top_vervolgacties",
    "policyname": "Employers can view team top actions",
    "cmd": "SELECT",
    "qual": "(auth.uid() IN ( SELECT users.id\n   FROM users\n  WHERE ((users.role = 'employer'::text) AND (users.employer_id = ( SELECT teams.werkgever_id\n           FROM teams\n          WHERE (teams.id = top_vervolgacties.team_id))))))",
    "with_check": null
  },
  {
    "tablename": "top_vervolgacties",
    "policyname": "Service role heeft volledige toegang",
    "cmd": "ALL",
    "qual": "true",
    "with_check": null
  },
  {
    "tablename": "top_vervolgacties",
    "policyname": "Service role kan alles",
    "cmd": "ALL",
    "qual": "(auth.role() = 'service_role'::text)",
    "with_check": null
  },
  {
    "tablename": "top_vervolgacties",
    "policyname": "Users kunnen eigen top acties zien",
    "cmd": "SELECT",
    "qual": "((werknemer_id = auth.uid()) OR (werkgever_id = auth.uid()))",
    "with_check": null
  },
  {
    "tablename": "top_vervolgacties",
    "policyname": "Werkgevers kunnen top acties van hun werknemers zien",
    "cmd": "SELECT",
    "qual": "(werkgever_id = auth.uid())",
    "with_check": null
  },
  {
    "tablename": "top_vervolgacties",
    "policyname": "Werknemers kunnen hun eigen top acties zien",
    "cmd": "SELECT",
    "qual": "(werknemer_id = auth.uid())",
    "with_check": null
  },
  {
    "tablename": "users",
    "policyname": "Allow user self-insert during registration",
    "cmd": "INSERT",
    "qual": null,
    "with_check": "(EXISTS ( SELECT 1\n   FROM auth.users users_1\n  WHERE ((users_1.id = users_1.id) AND ((users_1.email)::text = (users_1.email)::text))))"
  },
  {
    "tablename": "users",
    "policyname": "Allow user update during registration",
    "cmd": "UPDATE",
    "qual": "(EXISTS ( SELECT 1\n   FROM auth.users users_1\n  WHERE ((users_1.id = users_1.id) AND ((users_1.email)::text = (users_1.email)::text))))",
    "with_check": "(EXISTS ( SELECT 1\n   FROM auth.users users_1\n  WHERE ((users_1.id = users_1.id) AND ((users_1.email)::text = (users_1.email)::text))))"
  },
  {
    "tablename": "users",
    "policyname": "Service role kan alles",
    "cmd": "ALL",
    "qual": "(auth.role() = 'service_role'::text)",
    "with_check": null
  },
  {
    "tablename": "users",
    "policyname": "Users can insert own data",
    "cmd": "INSERT",
    "qual": null,
    "with_check": "(auth.uid() = id)"
  },
  {
    "tablename": "users",
    "policyname": "Users can update own data",
    "cmd": "UPDATE",
    "qual": "(auth.uid() = id)",
    "with_check": null
  },
  {
    "tablename": "users",
    "policyname": "Users can view own data",
    "cmd": "SELECT",
    "qual": "(auth.uid() = id)",
    "with_check": null
  },
  {
    "tablename": "users",
    "policyname": "Users kunnen eigen profiel updaten",
    "cmd": "UPDATE",
    "qual": "(id = auth.uid())",
    "with_check": null
  },
  {
    "tablename": "users",
    "policyname": "Users kunnen eigen profiel zien",
    "cmd": "SELECT",
    "qual": "(id = auth.uid())",
    "with_check": null
  },
  {
    "tablename": "users",
    "policyname": "Users kunnen eigen role zien",
    "cmd": "SELECT",
    "qual": "(id = auth.uid())",
    "with_check": null
  },
  {
    "tablename": "werkgever_gesprek_instellingen",
    "policyname": "Employers can insert own settings",
    "cmd": "INSERT",
    "qual": null,
    "with_check": "(auth.uid() IN ( SELECT users.id\n   FROM users\n  WHERE ((users.role = 'employer'::text) AND (users.employer_id = werkgever_gesprek_instellingen.werkgever_id))))"
  },
  {
    "tablename": "werkgever_gesprek_instellingen",
    "policyname": "Employers can update own settings",
    "cmd": "UPDATE",
    "qual": "(auth.uid() IN ( SELECT users.id\n   FROM users\n  WHERE ((users.role = 'employer'::text) AND (users.employer_id = werkgever_gesprek_instellingen.werkgever_id))))",
    "with_check": null
  },
  {
    "tablename": "werkgever_gesprek_instellingen",
    "policyname": "Employers can view own settings",
    "cmd": "SELECT",
    "qual": "(auth.uid() IN ( SELECT users.id\n   FROM users\n  WHERE ((users.role = 'employer'::text) AND (users.employer_id = werkgever_gesprek_instellingen.werkgever_id))))",
    "with_check": null
  }
]